<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.co.link.dao.SeriesNoticeDao">		<!-- Dao경로설정 -->
	<select id="getNotices3" resultType="seriesNotice">
		select 
			notice_no no,
			notice_title title,
			notice_contents contents,
			notice_create_date createDate
		from (select *
			from series_notices
			order by notice_create_date desc
			)
		where rownum &lt;= 3
	</select>
	
	
	
	<select id="getNoticeCount" parameterType="hashmap" resultType="int">
		select count(*)
		from series_notices
		<if test="keyword != null">
			where notice_title like '%'|| #{keyword} || '%' or notice_contents like '%' ||  #{keyword} || '%'
		</if>
	</select>
	
	<select id="getNotices" parameterType="hashmap" resultType="seriesNotice"> <!-- map 소문자로 쓸 것 -->
		select
			notice_no no,
			notice_title title,
			notice_contents contents,
			notice_create_date createDate
		from (
			select notice_no, notice_title, notice_contents, notice_create_date,
			ROW_NUMBER() over (order by notice_no desc) rn
			from series_notices
			<if test="keyword != null">
				where notice_title like '%'|| #{keyword} || '%' or notice_contents like '%' ||  #{keyword} || '%'
			</if>
		)
		where rn &gt;= #{beginIndex} and rn &lt;= #{endIndex}
	</select>
	
	
	
	<insert id="addNotice" parameterType="seriesNotice">
		insert into series_notices
		(notice_no, notice_title, notice_contents)
		values
		(series_notice_seq.nextval, #{title}, #{contents})
	</insert>
	
	<select id="getNotice" parameterType="int" resultType="seriesNotice">
		select
			notice_no no,
			notice_title title,
			notice_contents contents,
			notice_create_date createDate
		from
			series_notices
		where
			notice_no = #{value}
	</select>
	
	<!-- 
		select * from table
		<c:if test="search_option != null">
		<choose>
			<when test="search_option == 'name">
				where name like concat('%', #{search_text}, '%')
			</when>
			<when test="search_option == 'name">
				where name like concat('%', #{search_text}, '%')
			</when>
			<otherwise>
				where ... or
			</otherwise>
			
		</choose>
		</c:if> order by idx desc -->
</mapper>