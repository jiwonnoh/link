<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="kr.co.link.dao.AccountBookDao"> <!-- Dao 경로 설정 -->
  
	<!-- 가계부  -->
	   
	    <!-- 태그 추가 -->
	  	<insert id="addTag" parameterType="accountBookTag">
	  		insert into accountbook_tag(tag_no,tag_name,term_no)
	  		values(accountbook_tag_seq.nextval,#{tagName},#{termNo})
	  	</insert>
	
	  	<!--지출 내역 추가 -->
	  	<insert id="addexpense" parameterType="accountBookTerm">
			INSERT INTO ACCOUNTBOOK_TERM(		
				TERM_CASH,
				TERM_CARD,
				TERM_NO,
				TERM_DETAIL,
				TERM_DATE,
				TERM_REMAIN_AMOUNT,
				TERM_MEMO,
				CATEGORY_NO,
				USER_ID,
				TERM_GUBUN,
				TERM_CREATE_DATE)
			VALUES 
					(#{cash},#{card},#{no},#{detail},#{date},0,#{memo},#{category.categoryNo},#{id},#{gubun},sysdate)
		  	
	  	</insert>
	  
	  	<!-- 수입 내역 추가 -->
	  	<insert id="addIncome" parameterType="accountBookTerm">
			INSERT INTO ACCOUNTBOOK_TERM(		
				TERM_CASH,
				TERM_NO,
				TERM_DETAIL,
				TERM_DATE,
				TERM_REMAIN_AMOUNT,
				TERM_MEMO,
				CATEGORY_NO,
				USER_ID,
				TERM_GUBUN,
				TERM_CREATE_DATE)
			VALUES 
				(#{cash},#{no},#{detail},#{date},0,#{memo},#{category.categoryNo},#{id},#{gubun},sysdate)
		  	
	  	</insert>
	  	
	  	<!--지출 내역 Update  -->
	  	<update id="updateExpense" parameterType="accountBookTerm" >
	  	 update accountbook_term 
		 set 
				
		 		term_cash=#{cash}, 
		 		term_card=#{card},
				term_detail=#{detail},
			 	term_date=#{date},
				term_memo=#{memo},
				category_no=#{category.categoryNo}
		  where 
			   term_no=#{no}
  		
	  	</update>
	  	<!--수입 내역 Update  -->
	  	<update id="updateIncome" parameterType="accountBookTerm">
		  	update accountbook_term 
			set 
					term_no=#{no},
			 		term_cash=#{cash}, 
			 		term_card=#{card},
					term_detail=#{detail},
				 	term_date=#{date},
					term_memo=#{memo},
					category_no=#{category.categoryNo}
			  where 
					term_no=#{no}
  		
	  	</update>
	  	
	  	<select id="getExpenseTermByNo" parameterType="int" resultType="accountBookTerm">
	  		 select 
	  		 	term_memo memo, 
	  		 	term_cash cash, 
	  		 	term_card card, 
	  		 	term_date "date", 
	  		 	term_detail detail, 
	  		 	term_no no, 
	  		 	term_gubun gubun, 
	  		 	category_no "category.categoryNo"
			 from accountbook_term
			 where term_no=#{value}
			 and term_gubun='지출'
	  	</select>
	  	<select id="getIncomeTermByNo" parameterType="int" resultType="accountBookTerm">
	  		 select 
	  		 	term_memo memo, 
	  		 	term_cash cash, 
	  		 	term_card card, 
	  		 	term_date "date", 
	  		 	term_detail detail, 
	  		 	term_no no, 
	  		 	term_gubun gubun, 
	  		 	category_no "category.categoryNo"
			 from accountbook_term
			 where term_no=#{value}
			 and term_gubun='수입'
	  	</select>

	  	<select id="getTermNoSeq" resultType="int">
	  		select EXPENSE_NO_SEQ.nextval from dual
	  	</select>
	  	
	  	<!-- 지출&수입 내역 삭제 -->
	  	<delete id="deleteTerm" parameterType="int"> 
	  		delete from accountbook_term where term_no = #{no}
		</delete>
		<!-- 지출 전체 삭제 -->
		<delete id="deleteAllExpense">
			delete from accountbook_term where term_gubun='지출'
		</delete>
		<!-- 수입 전체 삭제 -->
		<delete id="deleteAllIncome">
			delete from accountbook_term where term_gubun='수입'
		</delete>
	  	
	  	
	  	<!-- 지출 내역 조회 -->
	  	<select id="getExpenseByuserId" parameterType="string" resultType="accountBookTerm">
			 SELECT 
			 			nvl(A.TERM_CARD, 0)		card,
	  					nvl(A.TERM_CASH, 0)		cash, 
	  					A.TERM_NO				no, 
	  					A.TERM_DETAIL			detail, 
	  					A.TERM_DATE				"date", 
	  					A.TERM_REMAIN_AMOUNT	remainAmount, 
	  					A.TERM_MEMO				memo, 
	  					A.TERM_GUBUN			gubun, 
	  					A.TERM_CREATE_DATE		createDate, 
	  					B.TAG_NAME				"tag.tagName",
	  					C.CATEGORY_NO			"category.categoryNo",
	  					C.CATEGORY_NAME			"category.categoryName"
			FROM 
						ACCOUNTBOOK_TERM A, ACCOUNTBOOK_TAG B, ACCOUNTBOOK_CATEGORY C
			WHERE 
						A.USER_ID=#{value}
			AND
						A.TERM_GUBUN='지출'
			AND
						A.CATEGORY_NO=C.CATEGORY_NO
			AND 		
						A.TERM_NO = B.TERM_NO
			ORDER BY TERM_DATE asc
	  	</select>
	  	
	  	<!-- 수입내역조회 -->
	  	<select id="getIncomeByuserId" parameterType="string" resultType="accountBookTerm">
	  		SELECT 
	  					nvl(A.TERM_CASH,0)		cash, 
	  					nvl(A.TERM_NO,0)		no, 
	  					A.TERM_DETAIL			detail, 
	  					A.TERM_DATE				"date", 
	  					A.TERM_REMAIN_AMOUNT	remainAmount, 
	  					A.TERM_MEMO				memo, 
	  					A.TERM_GUBUN			gubun, 
	  					A.TERM_CREATE_DATE		createDate, 
	  					B.TAG_NAME				"tag.tagName",
	  					C.CATEGORY_NO			"category.categoryNo",
	  					C.CATEGORY_NAME			"category.categoryName"
			FROM 
						ACCOUNTBOOK_TERM A, ACCOUNTBOOK_TAG B, ACCOUNTBOOK_CATEGORY C
			WHERE 
						A.USER_ID=#{value}
			AND
						A.TERM_GUBUN='수입'
			AND
						A.CATEGORY_NO=C.CATEGORY_NO
			AND 		
						A.TERM_NO = B.TERM_NO
			ORDER BY TERM_DATE asc
	  	</select>
	  	
	  	<!-- 지출 카테고리 조회-->
	  	<select id="getExpenseCategory" resultType="accountBookCategory" >
	  		SELECT 
	  				CATEGORY_NO categoryNo, 
	  				CATEGORY_NAME categoryName
			FROM 
					ACCOUNTBOOK_CATEGORY
			where 
					CATEGORY_GUBUN='지출'	
	  	</select>
	  	
	  	<!-- 수입 카테고리 조회 -->
	 	<select id="getIncomeCategory" resultType="accountBookCategory">
	 		SELECT 
	  				CATEGORY_NO categoryNo, 
	  				CATEGORY_NAME categoryName
			FROM 
					ACCOUNTBOOK_CATEGORY
			where 
					CATEGORY_GUBUN='수입'	
	 	</select>
	 	
	 	<!--
	 		 카테고리별 지출 금액 
	 		 :카테고리 번호를 이용하여  카테고리 종류별로 카테고리 이름과 토탈비용 조회
	 	-->
			 	
			<select id="getCategoryAndExpenseByCategoryNo" parameterType="string" resultType="hashmap">
				SELECT 
				 		B.category_name, nvl(total, 0) total
				FROM 	
						(select category_no, nvl(sum(term_cash), 0) + nvl(sum(term_card), 0) total
				      	from accountbook_term
				     	where term_gubun='지출'
				     	and user_id = #{value}      
				   		group by category_no) A, accountBook_category B 
		    		WHERE 
						A.category_no(+) = B.category_no
						and B.category_no &lt;= 10
			</select>
	 	
	 		<!--
	 		 카테고리별 수입 금액
	 		 :카테고리 번호를 이용하여  카테고리 종류별로 카테고리 이름과 토탈비용 조회
	 		-->
	 		
	 		<select id="getCategoryAndIncomeByCategoryNo" parameterType="string" resultType="hashmap" >
	 		
	 		SELECT 
	 				B.category_name, nvl(total, 0) total
			FROM 	
					(select category_no, nvl(sum(term_cash), 0) + nvl(sum(term_card), 0) total
	      			from accountbook_term
	     			where term_gubun='수입'
	     			and user_id = #{value}
	   			    group by category_no) A, accountBook_category B 
			WHERE 
					A.category_no(+) = B.category_no
					and B.category_no >= 10
	 		</select>
	 	  
	 	  
	<!-- 보고서 -->
		<!-- 월간 지출 수입 총금액 -->
		<select id="getMonthlyTotalTermByDate" parameterType="map" resultType="accountBookTerm" >
			select (select sum(nvl(TERM_CARD,0))+sum(nvl(term_cash, 0))
					from ACCOUNTBOOK_TERM
					where term_gubun='지출'
					and user_id = #{userId}
					and to_char(term_date, 'yyyymm') = 
					<choose>
						<when test="date != null">
							#{date}
						</when>
						<otherwise>
							to_char(sysdate, 'yyyymm')
						</otherwise>
					</choose>
					) expense,
					(select sum(TERM_CASH)
					from ACCOUNTBOOK_TERM
					where TERM_GUBUN='수입'
					and user_id = #{userId}
					and to_char(term_date, 'yyyymm') = 
					<choose>
						<when test="date != null">
							#{date}
						</when>
						<otherwise>
							to_char(sysdate, 'yyyymm')
						</otherwise>
					</choose>
					) income
			from dual
	 	</select>
	 	  
		<!-- 연간 지출 수입 총금액 -->
		<select id="getAnnualTotalTermByDate" parameterType="map" resultType="accountBookTerm" >
		select (select sum(nvl(TERM_CARD,0))+sum(nvl(term_cash, 0))
					from ACCOUNTBOOK_TERM
					where term_gubun='지출'
					and user_id = #{userId}
					and to_char(term_date, 'yyyy') = 
					<choose>
					<when test="date != null">
							#{date}
					</when>
					<otherwise>
							to_char(sysdate, 'yyyy')
					</otherwise>
					</choose>
					) expense,
					(select sum(TERM_CASH)
					from ACCOUNTBOOK_TERM
					where TERM_GUBUN='수입'
					and user_id = #{userId}
					and to_char(term_date, 'yyyy') = 
					<choose>
						<when test="date != null">
							#{date}
						</when>
						<otherwise>
							to_char(sysdate, 'yyyy')
						</otherwise>
					</choose>
					) income
			from dual
	 	</select> 
	 	
		<!-- 전체 기간 지출 수입 -->
		<select id="getTotalTerm"  parameterType="string" resultType="accountBookTerm" >
			select (select sum(TERM_CARD)+sum(term_cash)
					from ACCOUNTBOOK_TERM
					where term_gubun='지출'
					and user_id = #{value}) expense,
					(select sum(TERM_CASH)
					from ACCOUNTBOOK_TERM
					where TERM_GUBUN='수입'
					and user_id = #{value}) income
			from dual
	 	</select>
	 	
		<!-- 카테고리별 월간 총 지출 -->
		<select id="getMonthlyExpenseCategorybydate" parameterType="map" resultType="accountBookCategory" >
			SELECT B.category_name categoryName, nvl(total, 0) total
			FROM (select category_no, nvl(sum(term_cash), 0) + nvl(sum(term_card), 0) total
				  from accountbook_term
				  where term_gubun='지출'
				  and user_id = #{userId}
				  and to_char(term_date, 'yyyymm') = 
					<choose>
						<when test="date != null">
							#{date}
						</when>
						<otherwise>
							to_char(sysdate, 'yyyymm')
						</otherwise>
					</choose>
				  group by category_no) A, accountBook_category B 
			WHERE A.category_no(+) = B.category_no
			and B.category_no &lt;= 10
	 	</select>
		 	
		<!-- 카테고리별 연간 총 지출 -->
		<select id="getAnnualExpenseCategorybydate" parameterType="map" resultType="accountBookCategory" >
			SELECT B.category_name categoryName, nvl(total, 0) total
			FROM (select category_no, nvl(sum(term_cash), 0) + nvl(sum(term_card), 0) total
				  from accountbook_term
				  where term_gubun='지출'
				  and user_id = #{userId}
				  and to_char(term_date, 'yyyy') = 
					<choose>
						<when test="date != null">
							#{date}
						</when>
						<otherwise>
							to_char(sysdate, 'yyyy')
						</otherwise>
					</choose>
				  group by category_no) A, accountBook_category B 
			WHERE A.category_no(+) = B.category_no
			and B.category_no &lt;=10
	 	</select>
	 	
		<!-- 전체 기간 중 지출 top5 조회   -->
		<select id="getTop5Expense" parameterType="string" resultType="hashmap" >
			select *
			from (
					select currency, term_detail, category_name
					from (
						select nvl(A.term_cash, 0) currency, A.TERM_detail, B.CATEGORY_NAME
						from ACCOUNTBOOK_TERM A, ACCOUNTBOOK_CATEGORY B
						where A.CATEGORY_NO = B.CATEGORY_NO 
						and A.TERM_GUBUN = '지출'
						and A.USER_ID = #{value}
						union
						select nvl(A.term_card, 0) currency, A.TERM_detail, B.CATEGORY_NAME
						from ACCOUNTBOOK_TERM A, ACCOUNTBOOK_CATEGORY B
						where A.CATEGORY_NO = B.CATEGORY_NO 
						and A.TERM_GUBUN = '지출'
						and A.USER_ID = #{value}
					)
					order by currency desc
			)
			where rownum &lt;= 5
	 	</select>
	 	<!-- 전체 기장 중 낭비 top5 조회 -->
	 	<select id="getTop5Waste" parameterType="string" resultType="accountbookCategory">
		select CATEGORY_NAME categoryName, cnt, total
		from (
				select CATEGORY_NAME, cnt, total, row_number() over (order by cnt desc, total desc ) rn
				from ( 
						select B.CATEGORY_NAME, count(*) cnt ,  nvl(sum(term_cash), 0) + nvl(sum(term_card), 0) total
						from accountbook_term A,ACCOUNTBOOK_CATEGORY B
						where A.user_id=#{value}
						and A.term_gubun='지출'
						and A.category_no=B.category_no
						group by B.CATEGORY_NAME
				)
		)
		where rn &lt;=5
	 	</select>
	 
	<!-- 월결산 -->
	 	<!-- 내역 추가 -->
		<insert id="addWriting" parameterType="accountBookWriting">
			insert into ACCOUNTBOOK_WRITING 
					(WRITING_NO, WRITING_TITLE, WRITING_WRITER, WRITING_CONTENTS, WRITING_PUBLIC, WRITING_CREATE_DATE, USER_ID ) 
			values 
					(writing_no_seq.nextval, #{title}, #{writer}, #{contents}, #{publicYN}, SYSDATE, #{userId} )
		</insert>
		
		<!-- 내 글 목록 조회 -->
		<select id="getMyListByUserId" parameterType="string" resultType="accountBookWriting" >
		select 
				WRITING_TITLE title, 
				WRITING_CONTENTS contents,  
				WRITING_CREATE_DATE createDate, 
				WRITING_NO no, 
				WRITING_PUBLIC publicYN, 
				WRITING_WRITER writer
				
		from 
				ACCOUNTBOOK_WRITING 
		where 
				USER_ID=#{value}
		ORDER by 
				WRITING_CREATE_DATE DESC
		</select>
		
		<!-- 전체 글 목록 조회 -->
		<select id="getAllList" resultType="accountBookWriting">
		select 
				WRITING_TITLE title, 
				WRITING_CONTENTS contents,  
				WRITING_CREATE_DATE createDate, 
				WRITING_NO no, 
				WRITING_PUBLIC publicYN, 
				WRITING_WRITER writer
		from 
				ACCOUNTBOOK_WRITING
		ORDER by 
				WRITING_CREATE_DATE DESC
		</select>
		
		<select id="getCategoryByNo" parameterType="int" resultType="accountbookcategory">
		select 
			CATEGORY_NO categoryNo,
			CATEGORY_NAME categoryName,
			CATEGORY_GUBUN categoryGubun
		from
			ACCOUNTBOOK_CATEGORY
		where
			category_no = #{value}
		</select>
		
 	<!-- 예산 -->
 		<!-- 예산조회 -->
	 	<select id="getExpenseAmount" parameterType="string" resultType="accountBookTerm">
	 		select sum(A.TERM_CASH)
			from ACCOUNTBOOK_TERM A 
			where A.USER_ID = ${value}
  			and A.TERM_GUBUN = '수입'
	 	</select> 
		<select id="get">
			select B.category_name, sum(nvl(A.TERM_CASH, 0)) + sum(nvl(A.TERM_CARD, 0)) 
			from ACCOUNTBOOK_TERM A, ACCOUNTBOOK_CATEGORY B 
			where A.CATEGORY_NO = B.CATEGORY_NO
			and A.USER_ID = 'hk' 
			and A.TERM_GUBUN = '지출'
			and to_char(A.TERM_DATE, 'yyyymm') = to_char(sysdate, 'yyyymm') 
			group by B.category_name
		</select>
			
	 	
	 	
 	
  </mapper>